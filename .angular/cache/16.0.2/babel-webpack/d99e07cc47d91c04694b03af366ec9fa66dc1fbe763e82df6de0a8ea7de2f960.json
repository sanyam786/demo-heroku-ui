{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nlet SearchComponent = class SearchComponent {\n  //@ViewChild(MatPaginator)\n  //paginator!: MatPaginator;\n  //@ViewChild(MatSort)\n  //sort!: MatSort;\n  constructor(familyMemberService, router) {\n    this.familyMemberService = familyMemberService;\n    this.router = router;\n    this.searchQuery = '';\n    this.pageMode = '';\n    //dataSource!: MatTableDataSource<Member>;\n    //displayedColumns: string[] = ['actions', 'firstName', 'fatherName', 'mobile', 'area', 'profession', 'bloodGroup', 'status'];\n    this.isLoading = true; // Track the loading state\n  }\n\n  ngOnInit() {\n    if (this.afterSaveOrUpdate && this.afterSaveOrUpdate !== \"false\") {\n      this.searchAfterSaveOrUpdate();\n    } else {\n      this.onSearch();\n    }\n  }\n  ngAfterViewInit() {}\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    //this.dataSource.filter = filterValue.trim().toLowerCase();\n    // if (this.dataSource.paginator) {\n    //   this.dataSource.paginator.firstPage();\n    // }\n  }\n\n  onSearch() {\n    this.isLoading = true; // Show progress bar\n    this.familyMemberService.getAllFamiliesForDefaultSearch().subscribe({\n      next: data => {\n        this.members = data;\n        if (this.members !== undefined) {\n          //this.dataSource = new MatTableDataSource(this.members);\n          //this.dataSource.paginator = this.paginator;\n          //this.dataSource.sort = this.sort;\n          this.isLoading = false;\n        }\n        // console.log(data);\n      },\n\n      error: e => {\n        console.error(e);\n        this.isLoading = false; // Hide progress bar on error\n      }\n    });\n  }\n\n  searchAfterSaveOrUpdate() {\n    this.isLoading = true; // Show progress bar\n    this.familyMemberService.getFamilyByMemberId(this.memberIdAfterSaveOrUpdate).subscribe({\n      next: data => {\n        this.members = data.members;\n        if (this.members !== undefined) {\n          // this.dataSource = new MatTableDataSource(this.members);\n          // this.dataSource.paginator = this.paginator;\n          // this.dataSource.sort = this.sort;\n          this.isLoading = false;\n        }\n        //console.log(data);\n      },\n\n      error: e => {\n        console.error(e);\n        this.isLoading = false; // Hide progress bar on error\n      }\n    });\n  }\n\n  onViewDetails(id) {\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/view', id]);\n  }\n  onAddNewFamily() {\n    this.pageMode = 'create';\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/create-update-member', {\n      id: 0,\n      pageMode: this.pageMode\n    }]);\n  }\n  onAddNewMember(memberId) {\n    this.pageMode = 'create';\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/create-update-member', {\n      id: memberId,\n      pageMode: this.pageMode\n    }]);\n  }\n  onEditMember(memberId) {\n    this.pageMode = 'edit';\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/create-update-member', {\n      id: memberId,\n      pageMode: this.pageMode\n    }]);\n  }\n};\n__decorate([Input()], SearchComponent.prototype, \"afterSaveOrUpdate\", void 0);\n__decorate([Input()], SearchComponent.prototype, \"memberIdAfterSaveOrUpdate\", void 0);\nSearchComponent = __decorate([Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})], SearchComponent);\nexport { SearchComponent };","map":{"version":3,"names":["Component","ChangeDetectionStrategy","Input","SearchComponent","constructor","familyMemberService","router","searchQuery","pageMode","isLoading","ngOnInit","afterSaveOrUpdate","searchAfterSaveOrUpdate","onSearch","ngAfterViewInit","applyFilter","event","filterValue","target","value","getAllFamiliesForDefaultSearch","subscribe","next","data","members","undefined","error","e","console","getFamilyByMemberId","memberIdAfterSaveOrUpdate","onViewDetails","id","navigate","onAddNewFamily","onAddNewMember","memberId","onEditMember","__decorate","selector","templateUrl","styleUrls","changeDetection","Default"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/search/search.component.ts"],"sourcesContent":["import {AfterViewInit, OnInit, Component, ViewChild, ChangeDetectionStrategy, Input} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource, MatTableModule} from '@angular/material/table';\nimport { TutorialService } from 'src/app/services/tutorial.service';\nimport { FamilyMemberService } from 'src/app/services/familyMember.service';\nimport { Member } from 'src/app/models/Member.model';\nimport { Router } from '@angular/router';\nimport { FamilyMember } from '../models/FamilyMember.model';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class SearchComponent implements OnInit, AfterViewInit{\n\n  @Input()\n  afterSaveOrUpdate!: any;\n  @Input() memberIdAfterSaveOrUpdate!: string;\n  searchQuery: string = '';\n  members?: Member[];\n  member?: Member;\n  pageMode: string = '';\n  //dataSource!: MatTableDataSource<Member>;\n  //displayedColumns: string[] = ['actions', 'firstName', 'fatherName', 'mobile', 'area', 'profession', 'bloodGroup', 'status'];\n  isLoading = true;  // Track the loading state\n\n  //@ViewChild(MatPaginator)\n  //paginator!: MatPaginator;\n  //@ViewChild(MatSort)\n  //sort!: MatSort;\n  constructor(\n    private familyMemberService: FamilyMemberService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void{\n    if(this.afterSaveOrUpdate && this.afterSaveOrUpdate !== \"false\"){\n      this.searchAfterSaveOrUpdate();\n    }else{\n      this.onSearch();\n    }\n  }\n\n  ngAfterViewInit() {\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    //this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    // if (this.dataSource.paginator) {\n    //   this.dataSource.paginator.firstPage();\n    // }\n  }\n\n  onSearch() {\n    this.isLoading = true;  // Show progress bar\n    this.familyMemberService.getAllFamiliesForDefaultSearch().subscribe({\n      next: (data) => {\n        this.members = data;\n        if(this.members !== undefined){\n        //this.dataSource = new MatTableDataSource(this.members);\n        //this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n        this.isLoading = false;\n        }\n       // console.log(data);\n      },\n      error: (e) => {\n        console.error(e);\n        this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n  }\n\n  searchAfterSaveOrUpdate() {\n    this.isLoading = true;  // Show progress bar\n    this.familyMemberService.getFamilyByMemberId(this.memberIdAfterSaveOrUpdate).subscribe({\n      next: (data) => {\n        this.members = data.members;\n        if(this.members !== undefined){\n        // this.dataSource = new MatTableDataSource(this.members);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n        this.isLoading = false;\n        }\n        //console.log(data);\n      },\n      error: (e) => {\n        console.error(e);\n        this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n  }\n\n  onViewDetails(id: string) {\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/view', id]);\n  }\n\n  onAddNewFamily() {\n    this.pageMode = 'create';\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/create-update-member', {id: 0, pageMode: this.pageMode}]);\n  }\n\n  onAddNewMember(memberId: string) {\n    this.pageMode = 'create';\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/create-update-member', {id: memberId, pageMode: this.pageMode}]);\n  }\n\n  onEditMember(memberId: string) {\n    this.pageMode = 'edit';\n    // Navigate to the view component and pass the id\n    this.router.navigate(['/create-update-member', {id: memberId, pageMode: this.pageMode}]);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}