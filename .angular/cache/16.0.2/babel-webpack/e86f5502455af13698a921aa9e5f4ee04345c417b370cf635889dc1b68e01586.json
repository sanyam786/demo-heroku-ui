{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nfunction SearchComponent_div_6_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(result_r2);\n  }\n}\nfunction SearchComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Search Results:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, SearchComponent_div_6_li_4_Template, 2, 1, \"li\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.results);\n  }\n}\nclass SearchComponent {\n  constructor() {\n    this.searchQuery = '';\n    this.results = [];\n  }\n  onSearch() {\n    // Implement your search logic here\n    // This is just a placeholder for demonstration\n    this.results = ['Result 1', 'Result 2', 'Result 3'].filter(item => item.toLowerCase().includes(this.searchQuery.toLowerCase()));\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)();\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[\"matInput\", \"\", \"placeholder\", \"Search\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"search works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"mat-form-field\")(3, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.searchQuery = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_4_listener() {\n        return ctx.onSearch();\n      });\n      i0.ɵɵtext(5, \"Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, SearchComponent_div_6_Template, 5, 1, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchQuery);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.results.length > 0);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.MatFormField, i3.MatInput, i4.MatButton, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { SearchComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","result_r2","ɵɵtemplate","SearchComponent_div_6_li_4_Template","ɵɵproperty","ctx_r0","results","SearchComponent","constructor","searchQuery","onSearch","filter","item","toLowerCase","includes","selectors","decls","vars","consts","template","SearchComponent_Template","rf","ctx","ɵɵlistener","SearchComponent_Template_input_ngModelChange_3_listener","$event","SearchComponent_Template_button_click_4_listener","SearchComponent_div_6_Template","length"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/search/search.component.ts","/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/search/search.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent {\n  searchQuery: string = '';\n  results: string[] = [];\n\n  onSearch() {\n    // Implement your search logic here\n    // This is just a placeholder for demonstration\n    this.results = ['Result 1', 'Result 2', 'Result 3'].filter(item =>\n      item.toLowerCase().includes(this.searchQuery.toLowerCase())\n    );\n  }\n}","<p>search works!</p>\n<mat-form-field>\n    <input matInput placeholder=\"Search\" [(ngModel)]=\"searchQuery\">\n</mat-form-field>\n<button mat-raised-button color=\"primary\" (click)=\"onSearch()\">Search</button>\n  \n  <div *ngIf=\"results.length > 0\">\n    <h3>Search Results:</h3>\n    <ul>\n      <li *ngFor=\"let result of results\">{{ result }}</li>\n    </ul>\n  </div>\n"],"mappings":";;;;;;;;ICSMA,EAAA,CAAAC,cAAA,SAAmC;IAAAD,EAAA,CAAAE,MAAA,GAAY;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAjBH,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAY;;;;;IAHnDN,EAAA,CAAAC,cAAA,UAAgC;IAC1BD,EAAA,CAAAE,MAAA,sBAAe;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxBH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAO,UAAA,IAAAC,mCAAA,gBAAoD;IACtDR,EAAA,CAAAG,YAAA,EAAK;;;;IADoBH,EAAA,CAAAI,SAAA,GAAU;IAAVJ,EAAA,CAAAS,UAAA,YAAAC,MAAA,CAAAC,OAAA,CAAU;;;ADPvC,MAKaC,eAAe;EAL5BC,YAAA;IAME,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAH,OAAO,GAAa,EAAE;;EAEtBI,QAAQA,CAAA;IACN;IACA;IACA,IAAI,CAACJ,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAACK,MAAM,CAACC,IAAI,IAC7DA,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACL,WAAW,CAACI,WAAW,EAAE,CAAC,CAC5D;EACH;;AAVWN,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;QAAfA,eAAe;EAAAQ,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP5B1B,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAI;MACpBH,EAAA,CAAAC,cAAA,qBAAgB;MACyBD,EAAA,CAAA4B,UAAA,2BAAAC,wDAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAb,WAAA,GAAAgB,MAAA;MAAA,EAAyB;MAA9D9B,EAAA,CAAAG,YAAA,EAA+D;MAEnEH,EAAA,CAAAC,cAAA,gBAA+D;MAArBD,EAAA,CAAA4B,UAAA,mBAAAG,iDAAA;QAAA,OAASJ,GAAA,CAAAZ,QAAA,EAAU;MAAA,EAAC;MAACf,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAE5EH,EAAA,CAAAO,UAAA,IAAAyB,8BAAA,iBAKM;;;MATiChC,EAAA,CAAAI,SAAA,GAAyB;MAAzBJ,EAAA,CAAAS,UAAA,YAAAkB,GAAA,CAAAb,WAAA,CAAyB;MAI1Dd,EAAA,CAAAI,SAAA,GAAwB;MAAxBJ,EAAA,CAAAS,UAAA,SAAAkB,GAAA,CAAAhB,OAAA,CAAAsB,MAAA,KAAwB;;;;;;SDCnBrB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}