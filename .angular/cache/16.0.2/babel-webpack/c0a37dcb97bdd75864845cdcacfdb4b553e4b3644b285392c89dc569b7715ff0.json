{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass AuthInterceptor {\n  intercept(req, next) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Clone the request and attach the Authorization header\n      const clonedReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`)\n      });\n      return next.handle(clonedReq);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)();\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});\nexport { AuthInterceptor };","map":{"version":3,"names":["AuthInterceptor","intercept","req","next","token","localStorage","getItem","clonedReq","clone","headers","set","handle","factory","ɵfac"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/services/auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      // Clone the request and attach the Authorization header\n      const clonedReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`)\n      });\n      return next.handle(clonedReq);\n    } else {\n      return next.handle(req);\n    }\n  }\n}"],"mappings":";AAIA,MACaA,eAAe;EAC1BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACT;MACA,MAAMG,SAAS,GAAGL,GAAG,CAACM,KAAK,CAAC;QAC1BC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUN,KAAK,EAAE;OAC5D,CAAC;MACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,SAAS,CAAC;KAC9B,MAAM;MACL,OAAOJ,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;;EAE3B;;AAbWF,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;SAAfA,eAAe;EAAAY,OAAA,EAAfZ,eAAe,CAAAa;AAAA;SAAfb,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}