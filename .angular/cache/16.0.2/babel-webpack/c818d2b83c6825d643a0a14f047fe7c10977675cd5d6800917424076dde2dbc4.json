{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//const baseUrl = 'http://localhost:8082/api/tutorials';\n//const baseUrl = 'https://demo-heroku-315200bec293.herokuapp.com/api/family';\nconst baseUrl = 'http://localhost:8082/api/family';\nclass FamilyMemberService {\n  constructor(http) {\n    this.http = http;\n    this.loginResponse = {\n      message: '',\n      role: '',\n      memberId: 0,\n      token: ''\n    };\n  }\n  setLoginResponse(value) {\n    this.loginResponse = value;\n  }\n  getLoginResponse() {\n    return this.loginResponse;\n  }\n  getAll() {\n    return this.http.get(baseUrl + '/families');\n  }\n  getAllFamiliesForDefaultSearch() {\n    return this.http.get(baseUrl + '/defaultfamilies');\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/families/${id}`);\n  }\n  getMemberById(id) {\n    return this.http.get(`${baseUrl}/member/${id}`);\n  }\n  getFamilyByMemberId(id) {\n    return this.http.get(`${baseUrl}/memberfamily/${id}`);\n  }\n  getFamilyIdByMemberId(id) {\n    return this.http.get(`${baseUrl}/memberfamilyId/${id}`);\n  }\n  create(data, id) {\n    return this.http.post(`${baseUrl}/${id}/add-member`, data);\n  }\n  update(data, id) {\n    return this.http.put(`${baseUrl}/updateMember/${id}`, data);\n  }\n  updateFamilyHead(id) {\n    return this.http.put(`${baseUrl}/updateFamilyHead/${id}`, null);\n  }\n  approveStatus(id) {\n    return this.http.put(`${baseUrl}/approveStatus/${id}`, null);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByMemberId(memberId) {\n    return this.http.get(`${baseUrl}?memberId=${memberId}`);\n  }\n}\nFamilyMemberService.ɵfac = function FamilyMemberService_Factory(t) {\n  return new (t || FamilyMemberService)(i0.ɵɵinject(i1.HttpClient));\n};\nFamilyMemberService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FamilyMemberService,\n  factory: FamilyMemberService.ɵfac,\n  providedIn: 'root'\n});\nexport { FamilyMemberService };","map":{"version":3,"names":["baseUrl","FamilyMemberService","constructor","http","loginResponse","message","role","memberId","token","setLoginResponse","value","getLoginResponse","getAll","get","getAllFamiliesForDefaultSearch","id","getMemberById","getFamilyByMemberId","getFamilyIdByMemberId","create","data","post","update","put","updateFamilyHead","approveStatus","delete","deleteAll","findByMemberId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/services/familyMember.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FamilyMember } from '../models/FamilyMember.model';\nimport { Member } from '../models/Member.model';\n\n//const baseUrl = 'http://localhost:8082/api/tutorials';\n//const baseUrl = 'https://demo-heroku-315200bec293.herokuapp.com/api/family';\nconst baseUrl = 'http://localhost:8082/api/family';\n@Injectable({\n  providedIn: 'root',\n})\nexport class FamilyMemberService {\n\n   public loginResponse = {\n        message: '',\n        role: '',\n        memberId: 0,\n        token: ''\n      };\n\n  constructor(private http: HttpClient) {}\n\n  setLoginResponse(value: any) {\n    this.loginResponse = value;\n  }\n\n  getLoginResponse(): any {\n    return this.loginResponse;\n  }\n\n  getAll(): Observable<FamilyMember[]> {\n    return this.http.get<FamilyMember[]>(baseUrl + '/families');\n  }\n\n  getAllFamiliesForDefaultSearch(): Observable<Member[]> {\n    return this.http.get<Member[]>(baseUrl + '/defaultfamilies');\n  }\n\n  get(id: any): Observable<FamilyMember> {\n    return this.http.get<FamilyMember>(`${baseUrl}/families/${id}`);\n  }\n\n  getMemberById(id: any): Observable<Member> {\n    return this.http.get<Member>(`${baseUrl}/member/${id}`);\n  }\n\n  getFamilyByMemberId(id: any): Observable<FamilyMember> {\n    return this.http.get<FamilyMember>(`${baseUrl}/memberfamily/${id}`);\n  }\n\n  getFamilyIdByMemberId(id: any): Observable<any> {\n    return this.http.get<any>(`${baseUrl}/memberfamilyId/${id}`);\n  }\n\n  create(data: any, id: any): Observable<any> {\n    return this.http.post(`${baseUrl}/${id}/add-member`, data);\n  }\n\n  update(data: any, id: any): Observable<any> {\n    return this.http.put(`${baseUrl}/updateMember/${id}`, data);\n  }\n\n  updateFamilyHead(id: any): Observable<any> {\n    return this.http.put(`${baseUrl}/updateFamilyHead/${id}`, null);\n  }\n\n  approveStatus(id: any): Observable<any> {\n    return this.http.put(`${baseUrl}/approveStatus/${id}`, null);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByMemberId(memberId: any): Observable<FamilyMember[]> {\n    return this.http.get<FamilyMember[]>(`${baseUrl}?memberId=${memberId}`);\n  }\n}\n"],"mappings":";;AAMA;AACA;AACA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAGaC,mBAAmB;EAS9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPhB,KAAAC,aAAa,GAAG;MAClBC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;KACR;EAEkC;EAEvCC,gBAAgBA,CAACC,KAAU;IACzB,IAAI,CAACN,aAAa,GAAGM,KAAK;EAC5B;EAEAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACP,aAAa;EAC3B;EAEAQ,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAiBb,OAAO,GAAG,WAAW,CAAC;EAC7D;EAEAc,8BAA8BA,CAAA;IAC5B,OAAO,IAAI,CAACX,IAAI,CAACU,GAAG,CAAWb,OAAO,GAAG,kBAAkB,CAAC;EAC9D;EAEAa,GAAGA,CAACE,EAAO;IACT,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAe,GAAGb,OAAO,aAAae,EAAE,EAAE,CAAC;EACjE;EAEAC,aAAaA,CAACD,EAAO;IACnB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAS,GAAGb,OAAO,WAAWe,EAAE,EAAE,CAAC;EACzD;EAEAE,mBAAmBA,CAACF,EAAO;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAe,GAAGb,OAAO,iBAAiBe,EAAE,EAAE,CAAC;EACrE;EAEAG,qBAAqBA,CAACH,EAAO;IAC3B,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAM,GAAGb,OAAO,mBAAmBe,EAAE,EAAE,CAAC;EAC9D;EAEAI,MAAMA,CAACC,IAAS,EAAEL,EAAO;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACkB,IAAI,CAAC,GAAGrB,OAAO,IAAIe,EAAE,aAAa,EAAEK,IAAI,CAAC;EAC5D;EAEAE,MAAMA,CAACF,IAAS,EAAEL,EAAO;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACoB,GAAG,CAAC,GAAGvB,OAAO,iBAAiBe,EAAE,EAAE,EAAEK,IAAI,CAAC;EAC7D;EAEAI,gBAAgBA,CAACT,EAAO;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACoB,GAAG,CAAC,GAAGvB,OAAO,qBAAqBe,EAAE,EAAE,EAAE,IAAI,CAAC;EACjE;EAEAU,aAAaA,CAACV,EAAO;IACnB,OAAO,IAAI,CAACZ,IAAI,CAACoB,GAAG,CAAC,GAAGvB,OAAO,kBAAkBe,EAAE,EAAE,EAAE,IAAI,CAAC;EAC9D;EAEAW,MAAMA,CAACX,EAAO;IACZ,OAAO,IAAI,CAACZ,IAAI,CAACuB,MAAM,CAAC,GAAG1B,OAAO,IAAIe,EAAE,EAAE,CAAC;EAC7C;EAEAY,SAASA,CAAA;IACP,OAAO,IAAI,CAACxB,IAAI,CAACuB,MAAM,CAAC1B,OAAO,CAAC;EAClC;EAEA4B,cAAcA,CAACrB,QAAa;IAC1B,OAAO,IAAI,CAACJ,IAAI,CAACU,GAAG,CAAiB,GAAGb,OAAO,aAAaO,QAAQ,EAAE,CAAC;EACzE;;AArEWN,mBAAmB,C;mBAAnBA,mBAAmB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnB/B,mBAAmB,C;SAAnBA,mBAAmB;EAAAgC,OAAA,EAAnBhC,mBAAmB,CAAAiC,IAAA;EAAAC,UAAA,EAFlB;AAAM;SAEPlC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}