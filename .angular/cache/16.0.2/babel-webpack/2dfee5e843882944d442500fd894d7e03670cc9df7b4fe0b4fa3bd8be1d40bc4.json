{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nlet IdCardComponent = class IdCardComponent {\n  constructor(route, router, familyMemberService) {\n    this.route = route;\n    this.router = router;\n    this.familyMemberService = familyMemberService;\n    this.themes = [{\n      label: 'Royal Blue',\n      value: 'royal-blue'\n    }, {\n      label: 'Indigo & Sky Blue',\n      value: 'indigo-sky'\n    }, {\n      label: 'Green & Cream',\n      value: 'green-cream'\n    }, {\n      label: 'Charcoal & Gold',\n      value: 'charcoal-gold'\n    }, {\n      label: 'Crimson & Ivory',\n      value: 'crimson-ivory'\n    }];\n    this.selectedTheme = 'royal-blue';\n  }\n  ngOnInit() {\n    // Retrieve the id from the route parameters\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.loadData(this.id); // Call a method to load data based on the id\n  }\n\n  downloadPDF() {\n    html2canvas(this.cardRef.nativeElement, {\n      scale: 3\n    }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('l', 'mm', [canvas.width / 3, canvas.height / 3]);\n      pdf.addImage(imgData, 'PNG', 0, 0, canvas.width / 3, canvas.height / 3);\n      pdf.save(`${this.member?.firstName || 'id'}-card.pdf`);\n    });\n  }\n  loadData(id) {\n    //this.isLoading = true;  // Show progress bar\n    this.familyMemberService.getMemberById(id).subscribe({\n      next: data => {\n        this.member = data;\n        //this.isLoading = false;\n        //console.log(data);\n      },\n\n      error: e => {\n        console.error(e);\n        //this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n  }\n\n  get themeClass() {\n    return this.selectedTheme;\n  }\n  changeTheme(theme) {\n    this.selectedTheme = theme;\n  }\n};\n__decorate([ViewChild('card')], IdCardComponent.prototype, \"cardRef\", void 0);\nIdCardComponent = __decorate([Component({\n  selector: 'app-id-card',\n  templateUrl: './id-card.component.html',\n  styleUrls: ['./id-card.component.css'],\n  host: {\n    '[class]': 'themeClass'\n  } // this dynamically adds the theme class to :host\n})], IdCardComponent);\nexport { IdCardComponent };","map":{"version":3,"names":["Component","ViewChild","html2canvas","jsPDF","IdCardComponent","constructor","route","router","familyMemberService","themes","label","value","selectedTheme","ngOnInit","id","snapshot","paramMap","get","loadData","downloadPDF","cardRef","nativeElement","scale","then","canvas","imgData","toDataURL","pdf","width","height","addImage","save","member","firstName","getMemberById","subscribe","next","data","error","e","console","themeClass","changeTheme","theme","__decorate","selector","templateUrl","styleUrls","host"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/id-card/id-card.component.ts"],"sourcesContent":["import { Component, Input, ElementRef, ViewChild, Injectable, HostListener, OnInit, OnDestroy } from '@angular/core';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FamilyMemberService } from 'src/app/services/familyMember.service';\nimport { Member } from 'src/app/models/Member.model';\n\n@Component({\n  selector: 'app-id-card',\n  templateUrl: './id-card.component.html',\n  styleUrls: ['./id-card.component.css'],\n  host: { '[class]': 'themeClass' } // this dynamically adds the theme class to :host\n})\nexport class IdCardComponent {\n  @ViewChild('card') cardRef!: ElementRef;\n  member: any;\n  id!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private familyMemberService: FamilyMemberService,\n    //private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    // Retrieve the id from the route parameters\n    this.id = this.route.snapshot.paramMap.get('id')!;\n    this.loadData(this.id); // Call a method to load data based on the id\n  }\n  downloadPDF() {\n    html2canvas(this.cardRef.nativeElement, { scale: 3 }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('l', 'mm', [canvas.width / 3, canvas.height / 3]);\n      pdf.addImage(imgData, 'PNG', 0, 0, canvas.width / 3, canvas.height / 3);\n      pdf.save(`${this.member?.firstName || 'id'}-card.pdf`);\n    });\n  }\n\n  loadData(id: string): void {\n    //this.isLoading = true;  // Show progress bar\n    this.familyMemberService.getMemberById(id).subscribe({\n      next: (data) => {\n        this.member = data;\n        //this.isLoading = false;\n        //console.log(data);\n      },\n      error: (e) => {\n        console.error(e);\n        //this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n  }\n\n  themes = [\n    { label: 'Royal Blue', value: 'royal-blue' },\n    { label: 'Indigo & Sky Blue', value: 'indigo-sky' },\n    { label: 'Green & Cream', value: 'green-cream' },\n    { label: 'Charcoal & Gold', value: 'charcoal-gold' },\n    { label: 'Crimson & Ivory', value: 'crimson-ivory' }\n  ];\n\n  selectedTheme = 'royal-blue';\n\n  get themeClass() {\n    return this.selectedTheme;\n  }\n\n  changeTheme(theme: string) {\n    this.selectedTheme = theme;\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,EAAqBC,SAAS,QAAqD,eAAe;AACpH,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AAWzB,IAAaC,eAAe,GAA5B,MAAaA,eAAe;EAK1BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,mBAAwC;IAFxC,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAiC7B,KAAAC,MAAM,GAAG,CACP;MAAEC,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAY,CAAE,EAC5C;MAAED,KAAK,EAAE,mBAAmB;MAAEC,KAAK,EAAE;IAAY,CAAE,EACnD;MAAED,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAa,CAAE,EAChD;MAAED,KAAK,EAAE,iBAAiB;MAAEC,KAAK,EAAE;IAAe,CAAE,EACpD;MAAED,KAAK,EAAE,iBAAiB;MAAEC,KAAK,EAAE;IAAe,CAAE,CACrD;IAED,KAAAC,aAAa,GAAG,YAAY;EAvCzB;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,EAAE,GAAG,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACJ,EAAE,CAAC,CAAC,CAAC;EAC1B;;EACAK,WAAWA,CAAA;IACTjB,WAAW,CAAC,IAAI,CAACkB,OAAO,CAACC,aAAa,EAAE;MAAEC,KAAK,EAAE;IAAC,CAAE,CAAC,CAACC,IAAI,CAACC,MAAM,IAAG;MAClE,MAAMC,OAAO,GAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,CAAC;MAC7C,MAAMC,GAAG,GAAG,IAAIxB,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,CAACqB,MAAM,CAACI,KAAK,GAAG,CAAC,EAAEJ,MAAM,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC;MACvEF,GAAG,CAACG,QAAQ,CAACL,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAED,MAAM,CAACI,KAAK,GAAG,CAAC,EAAEJ,MAAM,CAACK,MAAM,GAAG,CAAC,CAAC;MACvEF,GAAG,CAACI,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,EAAEC,SAAS,IAAI,IAAI,WAAW,CAAC;IACxD,CAAC,CAAC;EACJ;EAEAf,QAAQA,CAACJ,EAAU;IACjB;IACA,IAAI,CAACN,mBAAmB,CAAC0B,aAAa,CAACpB,EAAE,CAAC,CAACqB,SAAS,CAAC;MACnDC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACL,MAAM,GAAGK,IAAI;QAClB;QACA;MACF,CAAC;;MACDC,KAAK,EAAGC,CAAC,IAAI;QACXC,OAAO,CAACF,KAAK,CAACC,CAAC,CAAC;QAChB;MACF;KACD,CAAC;EACJ;;EAYA,IAAIE,UAAUA,CAAA;IACZ,OAAO,IAAI,CAAC7B,aAAa;EAC3B;EAEA8B,WAAWA,CAACC,KAAa;IACvB,IAAI,CAAC/B,aAAa,GAAG+B,KAAK;EAC5B;CACD;AAzDoBC,UAAA,EAAlB3C,SAAS,CAAC,MAAM,CAAC,C,+CAAsB;AAD7BG,eAAe,GAAAwC,UAAA,EAN3B5C,SAAS,CAAC;EACT6C,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB,CAAC;EACtCC,IAAI,EAAE;IAAE,SAAS,EAAE;EAAY,CAAE,CAAC;CACnC,CAAC,C,EACW5C,eAAe,CA0D3B;SA1DYA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}