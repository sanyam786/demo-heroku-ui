{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = 'http://localhost:8082/auth/login';\n  }\n  login(credentials) {\n    return this.http.post(this.loginUrl, credentials);\n  }\n  isAuthenticated() {\n    // Check if the token is present in localStorage\n    return !!localStorage.getItem('token');\n  }\n  logout() {\n    // Remove token on logout\n    localStorage.removeItem('token');\n    localStorage.removeItem('loginResponse');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","http","loginUrl","login","credentials","post","isAuthenticated","localStorage","getItem","logout","removeItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/services/authService.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loginUrl = 'http://localhost:8082/auth/login';\n\n  constructor(private http: HttpClient) {}\n\n  login(credentials: any): Observable<any> {\n    return this.http.post<any>(this.loginUrl, credentials);\n  }\n\n  isAuthenticated(): boolean {\n    // Check if the token is present in localStorage\n    return !!localStorage.getItem('token');\n  }\n\n  logout() {\n    // Remove token on logout\n    localStorage.removeItem('token');\n    localStorage.removeItem('loginResponse');\n  }\n}"],"mappings":";;AAIA,MAGaA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,QAAQ,GAAG,kCAAkC;EAEd;EAEvCC,KAAKA,CAACC,WAAgB;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACH,QAAQ,EAAEE,WAAW,CAAC;EACxD;EAEAE,eAAeA,CAAA;IACb;IACA,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;EAEAC,MAAMA,CAAA;IACJ;IACAF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChCH,YAAY,CAACG,UAAU,CAAC,eAAe,CAAC;EAC1C;;AAlBWX,WAAW,C;mBAAXA,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXf,WAAW,C;SAAXA,WAAW;EAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPlB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}