{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//const baseUrl = 'http://localhost:8082/api/tutorials';\nconst baseUrl = 'https://demo-heroku-315200bec293.herokuapp.com/api/family';\n//const baseUrl = 'http://localhost:8082/api/family';\nclass FamilyMemberService {\n  constructor(http) {\n    this.http = http;\n    //public loginResponse: any;\n    this.loggedInRole = '';\n    this.loggedInMemberId = 0;\n    // When the service initializes, load the saved value from localStorage\n    const role = localStorage.getItem('loggedInRole');\n    if (role) {\n      this.loggedInRole = role; // Set the in-memory variable from localStorage\n    }\n\n    const memberId = localStorage.getItem('loggedInMemberId');\n    if (memberId) {\n      this.loggedInMemberId = parseInt(memberId); // Set the in-memory variable from localStorage\n    }\n  }\n\n  setLoggedInRole(value) {\n    localStorage.setItem('loggedInRole', value);\n    this.loggedInRole = value;\n  }\n  setLoggedInMemberId(value) {\n    localStorage.setItem('loggedInMemberId', value);\n    this.loggedInMemberId = value;\n  }\n  getLoggedInMemberId() {\n    return this.loggedInMemberId;\n  }\n  getLoggedInRole() {\n    return this.loggedInRole;\n  }\n  getAll() {\n    return this.http.get(baseUrl + '/families');\n  }\n  getAllFamiliesForDefaultSearch() {\n    return this.http.get(baseUrl + '/defaultfamilies');\n  }\n  searchMembers(params) {\n    let queryParams = new HttpParams();\n    // Loop through the params object and set query parameters\n    for (const key in params) {\n      if (params[key]) {\n        queryParams = queryParams.set(key, params[key]);\n      }\n    }\n    return this.http.get(baseUrl + '/searchAllFilter', {\n      params: queryParams\n    });\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/families/${id}`);\n  }\n  getMemberById(id) {\n    return this.http.get(`${baseUrl}/member/${id}`);\n  }\n  getFamilyByMemberId(id) {\n    return this.http.get(`${baseUrl}/memberfamily/${id}`);\n  }\n  getFamilyIdByMemberId(id) {\n    return this.http.get(`${baseUrl}/memberfamilyId/${id}`);\n  }\n  create(data, id) {\n    return this.http.post(`${baseUrl}/${id}/add-member`, data);\n  }\n  update(data, id) {\n    return this.http.put(`${baseUrl}/updateMember/${id}`, data);\n  }\n  updateFamilyHead(id) {\n    return this.http.put(`${baseUrl}/updateFamilyHead/${id}`, null);\n  }\n  updateRole(id, role) {\n    return this.http.put(`${baseUrl}/updateRole/${id}/${role}`, null);\n  }\n  approveStatus(id) {\n    return this.http.put(`${baseUrl}/approveStatus/${id}`, null);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByMemberId(memberId) {\n    return this.http.get(`${baseUrl}?memberId=${memberId}`);\n  }\n}\nFamilyMemberService.ɵfac = function FamilyMemberService_Factory(t) {\n  return new (t || FamilyMemberService)(i0.ɵɵinject(i1.HttpClient));\n};\nFamilyMemberService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FamilyMemberService,\n  factory: FamilyMemberService.ɵfac,\n  providedIn: 'root'\n});\nexport { FamilyMemberService };","map":{"version":3,"names":["HttpParams","baseUrl","FamilyMemberService","constructor","http","loggedInRole","loggedInMemberId","role","localStorage","getItem","memberId","parseInt","setLoggedInRole","value","setItem","setLoggedInMemberId","getLoggedInMemberId","getLoggedInRole","getAll","get","getAllFamiliesForDefaultSearch","searchMembers","params","queryParams","key","set","id","getMemberById","getFamilyByMemberId","getFamilyIdByMemberId","create","data","post","update","put","updateFamilyHead","updateRole","approveStatus","delete","deleteAll","findByMemberId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/services/familyMember.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FamilyMember } from '../models/FamilyMember.model';\nimport { Member } from '../models/Member.model';\n\n//const baseUrl = 'http://localhost:8082/api/tutorials';\nconst baseUrl = 'https://demo-heroku-315200bec293.herokuapp.com/api/family';\n//const baseUrl = 'http://localhost:8082/api/family';\n@Injectable({\n  providedIn: 'root',\n})\nexport class FamilyMemberService {\n\n    //public loginResponse: any;\n   public loggedInRole: string = '';\n   public loggedInMemberId: number = 0;\n\n  constructor(private http: HttpClient) {\n    // When the service initializes, load the saved value from localStorage\n    const role = localStorage.getItem('loggedInRole');\n    if (role) {\n      this.loggedInRole = role;  // Set the in-memory variable from localStorage\n    }\n    const memberId = localStorage.getItem('loggedInMemberId');\n    if (memberId) {\n      this.loggedInMemberId = parseInt(memberId);  // Set the in-memory variable from localStorage\n    }\n  }\n\n  setLoggedInRole(value: any) {\n    localStorage.setItem('loggedInRole', value);\n    this.loggedInRole = value;\n  }\n\n  setLoggedInMemberId(value: any) {\n    localStorage.setItem('loggedInMemberId', value);\n    this.loggedInMemberId = value;\n  }\n\n  getLoggedInMemberId(): any {\n    return this.loggedInMemberId;\n  }\n\n  getLoggedInRole(): any {\n    return this.loggedInRole;\n  }\n\n  getAll(): Observable<FamilyMember[]> {\n    return this.http.get<FamilyMember[]>(baseUrl + '/families');\n  }\n\n  getAllFamiliesForDefaultSearch(): Observable<Member[]> {\n    return this.http.get<Member[]>(baseUrl + '/defaultfamilies');\n  }\n\n  searchMembers(params: any): Observable<Member[]> {\n    let queryParams = new HttpParams();\n    \n    // Loop through the params object and set query parameters\n    for (const key in params) {\n      if (params[key]) {\n        queryParams = queryParams.set(key, params[key]);\n      }\n    }\n    return this.http.get<Member[]>(baseUrl + '/searchAllFilter', { params: queryParams });\n  }\n\n  get(id: any): Observable<FamilyMember> {\n    return this.http.get<FamilyMember>(`${baseUrl}/families/${id}`);\n  }\n\n  getMemberById(id: any): Observable<Member> {\n    return this.http.get<Member>(`${baseUrl}/member/${id}`);\n  }\n\n  getFamilyByMemberId(id: any): Observable<FamilyMember> {\n    return this.http.get<FamilyMember>(`${baseUrl}/memberfamily/${id}`);\n  }\n\n  getFamilyIdByMemberId(id: any): Observable<any> {\n    return this.http.get<any>(`${baseUrl}/memberfamilyId/${id}`);\n  }\n\n  create(data: any, id: any): Observable<any> {\n    return this.http.post(`${baseUrl}/${id}/add-member`, data);\n  }\n\n  update(data: any, id: any): Observable<any> {\n    return this.http.put(`${baseUrl}/updateMember/${id}`, data);\n  }\n\n  updateFamilyHead(id: any): Observable<any> {\n    return this.http.put(`${baseUrl}/updateFamilyHead/${id}`, null);\n  }\n\n  updateRole(id: any, role: any): Observable<any> {\n    return this.http.put(`${baseUrl}/updateRole/${id}/${role}`, null);\n  }\n\n  approveStatus(id: any): Observable<any> {\n    return this.http.put(`${baseUrl}/approveStatus/${id}`, null);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByMemberId(memberId: any): Observable<FamilyMember[]> {\n    return this.http.get<FamilyMember[]>(`${baseUrl}?memberId=${memberId}`);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}