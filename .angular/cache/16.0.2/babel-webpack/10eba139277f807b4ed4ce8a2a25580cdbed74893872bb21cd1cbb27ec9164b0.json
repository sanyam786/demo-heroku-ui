{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authService.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/familyMember.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/forms\";\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nclass LoginComponent {\n  constructor(authService, router, familyMemberService) {\n    this.authService = authService;\n    this.router = router;\n    this.familyMemberService = familyMemberService;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n    this.loggedInRole = '';\n    this.loggedInMemberId = '';\n    this.loginData = {\n      username: '',\n      password: ''\n    };\n  }\n  onLogin() {\n    this.authService.login(this.loginData).subscribe(response => {\n      this.loginResponse = {\n        message: response.message,\n        role: response.role,\n        memberId: response.memberId,\n        token: response.token\n      };\n      this.familyMemberService.setLoggedInMemberId(this.loggedInMemberId);\n      this.familyMemberService.setLoggedInRole(this.loggedInRole);\n      // Handle login success, e.g., store the token and redirect\n      localStorage.setItem('token', response.token);\n      this.router.navigate(['/dashboard']); // Redirect to dashboard or protected route\n    }, error => {\n      // Handle login error\n      this.errorMessage = 'Invalid Credentials!';\n      console.error('Login failed:', error);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FamilyMemberService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"login-form\"], [\"matInput\", \"\", \"placeholder\", \"Enter username\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter password\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.loginData.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.loginData.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_11_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(12, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginData.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginData.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i4.NgIf, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatButton, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgModel],\n  styles: [\".login-form[_ngcontent-%COMP%] {\\n    width: 300px;\\n    margin: 100px auto;\\n  }\\n  \\n  .error[_ngcontent-%COMP%] {\\n    color: red;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxVQUFVO0VBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIG1hcmdpbjogMTAwcHggYXV0bztcbiAgfVxuICBcbiAgLmVycm9yIHtcbiAgICBjb2xvcjogcmVkO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","authService","router","familyMemberService","username","password","loggedInRole","loggedInMemberId","loginData","onLogin","login","subscribe","response","loginResponse","message","role","memberId","token","setLoggedInMemberId","setLoggedInRole","localStorage","setItem","navigate","error","console","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","FamilyMemberService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","LoginComponent_Template_button_click_11_listener","ɵɵtemplate","LoginComponent_div_13_Template","ɵɵproperty"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/login/login.component.ts","/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/authService.service';\nimport { FamilyMemberService } from '../services/familyMember.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  errorMessage: string = '';\n  loggedInRole: string = '';\n  loggedInMemberId: string = '';\n\n  constructor(private authService: AuthService, \n    private router: Router,\n    private familyMemberService: FamilyMemberService) {}\n  loginData = { username: '', password: '' };\n  onLogin() {\n    this.authService.login(this.loginData).subscribe(\n      response => {\n        this.loginResponse = {\n          message: response.message,\n          role: response.role,\n          memberId: response.memberId,\n          token: response.token\n        }\n        this.familyMemberService.setLoggedInMemberId(this.loggedInMemberId);\n        this.familyMemberService.setLoggedInRole(this.loggedInRole);\n        // Handle login success, e.g., store the token and redirect\n        localStorage.setItem('token', response.token);\n        this.router.navigate(['/dashboard']); // Redirect to dashboard or protected route\n      },\n      error => {\n        // Handle login error\n        this.errorMessage = 'Invalid Credentials!'\n        console.error('Login failed:', error);\n      }\n    );\n  }\n}\n","<div class=\"login-form\">\n    <h2>Login</h2>\n    <mat-form-field>\n      <mat-label>Username</mat-label>\n      <input matInput [(ngModel)]=\"loginData.username\" placeholder=\"Enter username\">\n    </mat-form-field>\n  \n    <mat-form-field>\n      <mat-label>Password</mat-label>\n      <input matInput [(ngModel)]=\"loginData.password\" type=\"password\" placeholder=\"Enter password\">\n    </mat-form-field>\n  \n    <button mat-raised-button color=\"primary\" (click)=\"onLogin()\">Login</button>\n  \n    <div *ngIf=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}