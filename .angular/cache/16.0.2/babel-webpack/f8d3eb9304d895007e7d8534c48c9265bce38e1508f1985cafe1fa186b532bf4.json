{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy, inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nlet CreateUpdateMemberComponent = class CreateUpdateMemberComponent {\n  constructor(router, activatedRoute, change, familyMemberService) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.change = change;\n    this.familyMemberService = familyMemberService;\n    // firstName: '';\n    // lastName: '';\n    // fatherName: '';\n    // memberType: '';\n    // gender: '';\n    // dateOfBirth: '';\n    //maritalStatusChk: string | undefined;\n    // bloodGroup: '';\n    // education: '';\n    // permanentAddress: '';\n    // mobile: '';\n    // email: '';\n    // area: '';\n    // checkedSameAddress: boolean = false;\n    // currentAddress: '';\n    // proffession: '';\n    // proffessionAddress: '';\n    // proffessionEmail: '';\n    // proffessionNumber: '';\n    // checkIAffirm: '';\n    // aborigine: '';\n    this._snackBar = inject(MatSnackBar);\n    this.horizontalPosition = 'center';\n    this.verticalPosition = 'top';\n    this.selectedFile = null;\n    this.previewUrl = null;\n    this.isLoading = true; // Track the loading state\n    this.isLoadingOnSubmit = false;\n    this.familyMember = {\n      familyHead: false,\n      firstName: '',\n      lastName: '',\n      fatherName: '',\n      gender: '',\n      dateOfBirth: '',\n      maritalStatus: '',\n      bloodGroup: '',\n      education: '',\n      permanentAddress: '',\n      mobile: '',\n      altMobile: '',\n      whatsappMobile: '',\n      email: '',\n      area: '',\n      checkedSameAddress: false,\n      checkedSameWhatsappNumber: false,\n      currentAddress: '',\n      profession: '',\n      professionAddress: '',\n      professionEmail: '',\n      professionNumber: '',\n      checkIAffirm: false,\n      aborigine: '',\n      status: 'Pending',\n      role: '',\n      ratriBhojanTyag: '',\n      dhowanPani: ''\n    };\n    this.familyId = 0;\n    this.pageMode = '';\n    this.MAX_FILE_SIZE = 1 * 1024 * 1024; // 2 MB in bytes\n    this.loggedInRole = '';\n    this.loggedInMemberId = 0;\n  }\n  ngOnInit() {\n    this.isLoading = true; // Show progress bar\n    this.memeberId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.pageMode = this.activatedRoute.snapshot.paramMap.get('pageMode');\n    this.loggedInRole = this.familyMemberService.getLoggedInRole();\n    this.loggedInMemberId = this.familyMemberService.getLoggedInMemberId();\n    this.alreadyExistingFamilyHead = false;\n    this.alreadyExistingPhoneNumberForAnotherFamily = false;\n    this.familyMemberService.getFamilyByMemberId(this.memeberId).subscribe({\n      next: data => {\n        this.currentFamily = data;\n        this.familyId = data.familyId;\n        //console.log(this.currentFamily);\n        this.alreadyExistingFamilyHead = this.checkForAlreadyExistingFamilyHead(data);\n        this.isLoading = false;\n      },\n      error: e => {\n        console.error(e);\n        this.isLoading = false; // Hide progress bar on error\n      }\n    });\n\n    if (this.pageMode === 'edit') {\n      this.isLoading = true; // Show progress bar\n      this.familyMemberService.getMemberById(this.memeberId).subscribe({\n        next: data => {\n          this.familyMember = data;\n          if (this.familyMember.checkedSameWhatsappNumber === null) {\n            this.familyMember.checkedSameWhatsappNumber = false;\n          }\n          this.isLoading = false;\n          // if(this.familyMember.photo !== null) {\n          //   this.selectedFile = this.familyMember.photo;\n          // }\n          //console.log(data);\n        },\n\n        error: e => {\n          console.error(e);\n          this.isLoading = false; // Hide progress bar on error\n        }\n      });\n    }\n\n    this.familyMemberService.getAllFamiliesForDefaultSearch().subscribe({\n      next: data => {\n        this.allFamilyMembers = data;\n        this.isLoading = false;\n      },\n      error: e => {\n        console.error(e);\n        this.isLoading = false; // Hide progress bar on error\n      }\n    });\n  }\n\n  onSaveOrUpdate() {\n    if (this.isLoadingOnSubmit) return; // Prevent duplicate submissions\n    if (this.familyMember.checkedSameAddress || !this.familyMember.checkedSameAddress && this.familyMember.currentAddress) {\n      if (this.familyMember.checkedSameWhatsappNumber || !this.familyMember.checkedSameWhatsappNumber && this.familyMember.whatsappMobile) {\n        if (this.familyMember.firstName && this.familyMember.lastName && this.familyMember.fatherName && this.familyMember.gender && this.familyMember.dhowanPani && this.familyMember.ratriBhojanTyag && !this.checkMobileNumberErrors(this.familyMember.mobile)) {\n          this.isLoadingOnSubmit = true; // Start the spinner\n          if (this.imageInBase64) {\n            this.familyMember.photo = this.imageInBase64;\n          }\n          // Update mode logic\n          if (this.pageMode === 'edit' && this.familyMember.photo) {\n            this.familyMemberService.update(this.familyMember, this.familyId).subscribe({\n              next: res => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop the spinner after delay\n                  this.submitted = true;\n                  this.openSnackBarWithDuration('Success: Member updated successfully.', 'Close');\n                  this.backToSearchPage(res.memberId);\n                }, 1000); // Simulate 1 second delay\n              },\n\n              error: e => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop spinner after error delay\n                  console.error(e);\n                  this.openSnackBar('Error: Failed to update member.', 'Close');\n                }, 1000); // Simulate 1 second delay\n              }\n            });\n          } else if (this.pageMode === 'edit' && !this.familyMember.photo) {\n            this.isLoadingOnSubmit = false; // Stop the spinner\n            this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n          }\n          // Create mode logic\n          if (this.pageMode === 'create' && this.selectedFile) {\n            this.familyMember.role = 'selfedit';\n            this.familyMemberService.create(this.familyMember, this.familyId).subscribe({\n              next: res => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop the spinner after delay\n                  this.submitted = true;\n                  this.openSnackBarWithDuration('Success: Member added successfully.', 'Close');\n                  this.backToSearchPage(res.memberId);\n                }, 1000); // Simulate 1 second delay\n              },\n\n              error: e => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop spinner after error delay\n                  console.error(e);\n                  this.openSnackBar('Error: Failed to add member.', 'Close');\n                }, 1000); // Simulate 1 second delay\n              }\n            });\n          } else if (this.pageMode === 'create' && !this.selectedFile) {\n            this.isLoadingOnSubmit = false; // Stop the spinner\n            this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n          }\n        } else {\n          this.openSnackBar('Error: Mobile number entered belongs to already existing family.', 'Close');\n        }\n      } else {\n        this.openSnackBar('Error: WhatsApp number is required if not same as Primary mobile number.', 'Close');\n      }\n    } else {\n      this.openSnackBar('Error: Current address is required if not same as Permanent address.', 'Close');\n    }\n  }\n  // onSaveOrUpdate(): void {\n  //   if(this.familyMember.checkedSameAddress || (!this.familyMember.checkedSameAddress && this.familyMember.currentAddress)){\n  //     if(this.familyMember.checkedSameWhatsappNumber || (!this.familyMember.checkedSameWhatsappNumber && this.familyMember.whatsappMobile)){\n  //       if (this.familyMember.firstName && this.familyMember.lastName && this.familyMember.fatherName && this.familyMember.gender \n  //          && this.familyMember.dhowanPani && this.familyMember.ratriBhojanTyag && !this.checkMobileNumberErrors(this.familyMember.mobile)) {\n  //         // if(this.selectedFile){\n  //         //   this.onUpload();\n  //         // }else if(this.familyMember.photo){\n  //         //   this.setFormData();\n  //         // }\n  //         if(this.imageInBase64){\n  //           this.familyMember.photo = this.imageInBase64;\n  //         }\n  //         if(this.pageMode === 'edit' && this.familyMember.photo){\n  //           this.familyMemberService.update(this.familyMember, this.familyId).subscribe({\n  //             next: (res) => {\n  //               console.log(res);\n  //               this.submitted = true;\n  //               this.openSnackBarWithDuration('Success: Member updated successfully.', 'Close');\n  //               console.log('Member is updated');\n  //               this.backToSearchPage(res.memberId);\n  //             },\n  //             error: (e) => console.error(e)\n  //           });\n  //         }else if(this.pageMode === 'edit' && !this.familyMember.photo) {\n  //           this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n  //           console.error('Form is invalid');\n  //         } \n  //         if(this.pageMode === 'create' && this.selectedFile){\n  //           this.familyMember.role = 'selfedit';\n  //           this.familyMemberService.create(this.familyMember, this.familyId).subscribe({\n  //             next: (res) => {\n  //               console.log(res);\n  //               this.submitted = true;\n  //               this.openSnackBarWithDuration('Success: Member added successfully.', 'Close');\n  //               console.log('Member is updated');\n  //               this.backToSearchPage(res.memberId);\n  //             },\n  //             error: (e) => console.error(e)\n  //           });\n  //         }else if(this.pageMode === 'create' && !this.selectedFile) {\n  //           this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n  //           console.error('Form is invalid');\n  //         }\n  //         console.log('Family Member Data', this.familyMember);\n  //       } else {  \n  //         this.openSnackBar('Error: Mobile number entered belongs to already existing family.', 'Close');\n  //         console.error('Form is invalid');\n  //       }\n  //     }else {\n  //       this.openSnackBar('Error: WhatsApp number is required if not same as Primary mobile number.', 'Close');\n  //           console.error('Form is invalid');\n  //     }\n  //   }else {\n  //       this.openSnackBar('Error: Current address is required if not same as Permanent address.', 'Close');\n  //           console.error('Form is invalid');\n  //     }\n  // }\n  backToSearchPage(memberId) {\n    if (memberId !== undefined && memberId !== null && memberId !== '' && memberId !== 0 && memberId !== \"0\") {\n      this.router.navigate(['/dashboard', {\n        id: memberId,\n        afterSaveOrUpdate: true\n      }]);\n    } else {\n      this.router.navigate(['/dashboard', {\n        afterSaveOrUpdate: false\n      }]);\n    }\n  }\n  // onUpdate(): void {\n  //   if (this.familyMember.firstName && this.familyMember.lastName && this.familyMember.fatherName && this.familyMember.gender && !this.checkMobileNumberErrors(this.familyMember.mobile)) {\n  //     this.familyMemberService.update(this.familyMember, this.familyId).subscribe({\n  //       next: (res) => {\n  //         console.log(res);\n  //         this.submitted = true;\n  //       },\n  //       error: (e) => console.error(e)\n  //     });\n  //   } else {\n  //     this.openSnackBar('Error: Mobile number entered belongs to already existing family.', 'Close');\n  //     console.error('Form is invalid');\n  //   }\n  // }\n  // onFileSelected(event: any): void {\n  //   const fileInput = event.target as HTMLInputElement;\n  //   var base64String = null;\n  //   if (fileInput.files && fileInput.files[0]) {\n  //     this.selectedFile = fileInput.files[0];\n  //     // Preview the selected image\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       this.previewUrl = reader.result;\n  //       base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n  //     };\n  //     reader.readAsDataURL(this.selectedFile);\n  //     if(base64String !== null){\n  //       this.familyMember.photo = base64String;\n  //     }\n  //   }\n  // }\n  // onFileSelected(event: any): void {\n  //   const fileInput = event.target as HTMLInputElement;\n  //   if (fileInput.files && fileInput.files[0]) {\n  //     this.selectedFile = fileInput.files[0];\n  //       // Preview the selected image\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       const result = reader.result as string; // Typecast result to string\n  //       this.previewUrl = result;\n  //       // Extract the Base64 portion of the Data URL\n  //       const base64String = result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n  //       this.imageInBase64= base64String;\n  //       // // Convert Base64 string to Blob\n  //       // const byteString = atob(base64String);\n  //       // const byteNumbers = new Array(byteString.length);\n  //       // for (let i = 0; i < byteString.length; i++) {\n  //       //   byteNumbers[i] = byteString.charCodeAt(i);\n  //       // }\n  //       // const byteArray = new Uint8Array(byteNumbers);\n  //       // if(this.selectedFile !== null){\n  //       //   const blob = new Blob([byteArray], { type: this.selectedFile.type });\n  //       //   this.familyMember.photo = blob;\n  //       // }  \n  //     };\n  //     reader.readAsDataURL(this.selectedFile);\n  //   }\n  // }\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files && fileInput.files[0]) {\n      this.selectedFile = fileInput.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        const result = reader.result;\n        // Set the image preview URL\n        this.previewUrl = result;\n        // Extract the Base64 string and store it in the familyMember.photo\n        const base64String = result.split(',')[1];\n        this.familyMember.photo = base64String;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n  // onUpload(): Boolean {\n  //   if (this.selectedFile) {\n  //     if (this.selectedFile.size > this.MAX_FILE_SIZE) {\n  //       //alert('File is too large!');\n  //       return false;\n  //     }\n  //     const fileInput = document.getElementById('fileInput');\n  //     //fileInput.addEventListener('change', function() {\n  //         const file = this.selectedFile;\n  //         const reader = new FileReader();\n  //         if(reader !== null && reader.result !== null){\n  //           reader.onloadend = function() {\n  //             const base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n  //             const payload = {\n  //                 fileContent: base64String\n  //             };\n  //             this.f\n  //             // fetch('/upload', {\n  //             //     method: 'POST',\n  //             //     headers: {\n  //             //         'Content-Type': 'application/json'\n  //             //     },\n  //             //     body: JSON.stringify(payload)\n  //             // })\n  //             // .then(response => response.json())\n  //             // .then(data => console.log(data));\n  //         };\n  //         reader.readAsDataURL(file);\n  //         }\n  //    // });\n  //     // this.formdata = new FormData();\n  //     // this.formdata.append('file', this.selectedFile);\n  //     // this.formdata.append(\n  //     //   'familyMember',\n  //     //   new Blob([JSON.stringify(this.familyMember)], { type: 'application/json' })\n  //     // );\n  //     return true\n  //   }\n  //   return false;\n  // }\n  setFormData() {\n    this.formdata = new FormData();\n    this.formdata.append('familyMember', new Blob([JSON.stringify(this.familyMember)], {\n      type: 'application/json'\n    }));\n  }\n  goBack(id) {\n    this.router.navigate(['/family', id]);\n  }\n  checkForAlreadyExistingFamilyHead(data) {\n    const familyMembers = data.members;\n    for (var i = 0; i < familyMembers.length; i++) {\n      if (familyMembers[i].familyHead) {\n        return true;\n      }\n    }\n    return false;\n  }\n  checkMobileNumberErrors(mobile) {\n    //const inputMobileNumber = event.target.value;\n    this.alreadyExistingPhoneNumberForAnotherFamily = this.checkForAlreadyExistingPhoneNumberForAnotherFamily(mobile);\n    //this.change.detectChanges();\n    return this.alreadyExistingPhoneNumberForAnotherFamily;\n  }\n  checkForAlreadyExistingPhoneNumberForAnotherFamily(inputMobileNumber) {\n    const allmembers = this.allFamilyMembers;\n    var currentFamilyMembers;\n    if (this.currentFamily !== null && this.currentFamily !== undefined && this.currentFamily.members !== undefined && this.currentFamily.members?.length > 0) {\n      currentFamilyMembers = this.currentFamily.members;\n    } else {\n      currentFamilyMembers = [];\n    }\n    if (allmembers !== null && allmembers !== undefined && allmembers.length > 0) {\n      var i = allmembers.length;\n      while (i--) {\n        if (currentFamilyMembers !== undefined) {\n          for (let j = 0; j < currentFamilyMembers.length; j++) {\n            if (allmembers[i].memberId === currentFamilyMembers[j].memberId) {\n              allmembers.splice(i, 1);\n            }\n          }\n        }\n      }\n      for (let k = 0; k < allmembers.length; k++) {\n        if (allmembers[k].mobile === inputMobileNumber) {\n          return true;\n        }\n      }\n    }\n    return false;\n    // var allowedPhNumbers: any;\n    // if(currentFamilyMembers !== undefined && currentFamilyMembers.length > 0){\n    //   for(let i=0; i<currentFamilyMembers.length; i++)\n    //   { \n    //     allowedPhNumbers[i] = currentFamilyMembers[i].mobile;\n    //   }\n    //   for(var i=0; i < allmembers.length; i++){\n    //     for(let j=0; j<currentFamilyMembers.length; j++){\n    //       if(allmembers[i].memberId !== currentFamilyMembers[j].memberId && allowedPhNumbers.includes(allmembers[i].mobile)){\n    //         return true;\n    //       }\n    //     }\n    //   }\n    // }\n    // return false;\n  }\n\n  openSnackBar(message, action) {\n    this._snackBar.open(message, action, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n  }\n  openSnackBarWithDuration(message, action) {\n    this._snackBar.open(message, action, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 8 * 1000\n    });\n  }\n  onSameAddressCheck(event) {\n    if (event.target.checked || this.pageMode === 'edit' && this.familyMember.checkedSameAddress) {\n      this.familyMember.currentAddress = this.familyMember.permanentAddress;\n    } else {\n      //this.familyMember.currentAddress = '';\n    }\n    console.log(event.target.value);\n  }\n  onSameWhatsAppNumberCheck(event) {\n    if (event.target.checked || this.pageMode === 'edit' && this.familyMember.checkedSameWhatsappNumber) {\n      this.familyMember.whatsappMobile = this.familyMember.mobile;\n    } else {\n      //this.familyMember.whatsappMobile = '';\n    }\n    console.log(event.target.value);\n  }\n  // isSelfEdit(memberId: any): any {\n  //   if(this.loggedInRole === 'selfedit' && memberId === this.loggedInMemberId){\n  //     return true;\n  //   }\n  //   return false;\n  // }\n  isSelfEdit(memberId) {\n    this.loadFamilyData(memberId);\n    if (this.familyMemberForAccessCheck != undefined && this.familyMemberForAccessCheck.members != undefined) {\n      for (let i = 0; i < this.familyMemberForAccessCheck?.members.length; i++) {\n        if (this.loggedInRole === 'selfedit' && this.loggedInMemberId === this.familyMemberForAccessCheck.members[i].memberId) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  loadFamilyData(id) {\n    //this.isLoading = true;  // Show progress bar\n    this.familyMemberService.getFamilyByMemberId(id).subscribe({\n      next: data => {\n        this.familyMemberForAccessCheck = data;\n        //this.isLoading = false;\n        //console.log(data);\n      },\n\n      error: e => {\n        console.error(e);\n        //this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n  }\n\n  checkRoles() {\n    if (this.pageMode === 'edit') {\n      if (this.loggedInRole === 'admin' || this.loggedInRole === 'edit' || this.isSelfEdit(this.familyMember.memberId)) {\n        return true;\n      }\n    }\n    if (this.pageMode === 'create') {\n      if (this.loggedInRole === 'admin' || this.loggedInRole === 'edit') {\n        return true;\n      }\n    }\n    return false;\n  }\n};\nCreateUpdateMemberComponent = __decorate([Component({\n  selector: 'app-create-update-member',\n  templateUrl: './create-update-member.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n  styleUrls: ['./create-update-member.component.css']\n})], CreateUpdateMemberComponent);\nexport { CreateUpdateMemberComponent };","map":{"version":3,"names":["Component","ChangeDetectionStrategy","inject","MatSnackBar","CreateUpdateMemberComponent","constructor","router","activatedRoute","change","familyMemberService","_snackBar","horizontalPosition","verticalPosition","selectedFile","previewUrl","isLoading","isLoadingOnSubmit","familyMember","familyHead","firstName","lastName","fatherName","gender","dateOfBirth","maritalStatus","bloodGroup","education","permanentAddress","mobile","altMobile","whatsappMobile","email","area","checkedSameAddress","checkedSameWhatsappNumber","currentAddress","profession","professionAddress","professionEmail","professionNumber","checkIAffirm","aborigine","status","role","ratriBhojanTyag","dhowanPani","familyId","pageMode","MAX_FILE_SIZE","loggedInRole","loggedInMemberId","ngOnInit","memeberId","snapshot","paramMap","get","getLoggedInRole","getLoggedInMemberId","alreadyExistingFamilyHead","alreadyExistingPhoneNumberForAnotherFamily","getFamilyByMemberId","subscribe","next","data","currentFamily","checkForAlreadyExistingFamilyHead","error","e","console","getMemberById","getAllFamiliesForDefaultSearch","allFamilyMembers","onSaveOrUpdate","checkMobileNumberErrors","imageInBase64","photo","update","res","setTimeout","submitted","openSnackBarWithDuration","backToSearchPage","memberId","openSnackBar","create","undefined","navigate","id","afterSaveOrUpdate","onFileSelected","event","fileInput","target","files","reader","FileReader","onload","result","base64String","split","readAsDataURL","setFormData","formdata","FormData","append","Blob","JSON","stringify","type","goBack","familyMembers","members","i","length","checkForAlreadyExistingPhoneNumberForAnotherFamily","inputMobileNumber","allmembers","currentFamilyMembers","j","splice","k","message","action","open","duration","onSameAddressCheck","checked","log","value","onSameWhatsAppNumberCheck","isSelfEdit","loadFamilyData","familyMemberForAccessCheck","checkRoles","__decorate","selector","templateUrl","changeDetection","Default","styleUrls"],"sources":["/Users/sanyamlodha/Personal/Samta/code/demo-heroku/demo-heroku-ui/demo-heroku-ui/src/app/create-update-member/create-update-member.component.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FamilyMember } from '../models/FamilyMember.model';\nimport { Member } from '../models/Member.model';\nimport { FamilyMemberService } from 'src/app/services/familyMember.service';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-create-update-member',\n  templateUrl: './create-update-member.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n  styleUrls: ['./create-update-member.component.css']\n})\nexport class CreateUpdateMemberComponent  implements OnInit{\n  // firstName: '';\n  // lastName: '';\n  // fatherName: '';\n  // memberType: '';\n  // gender: '';\n  // dateOfBirth: '';\n   //maritalStatusChk: string | undefined;\n  // bloodGroup: '';\n  // education: '';\n  // permanentAddress: '';\n  // mobile: '';\n  // email: '';\n  // area: '';\n  // checkedSameAddress: boolean = false;\n  // currentAddress: '';\n  // proffession: '';\n  // proffessionAddress: '';\n  // proffessionEmail: '';\n  // proffessionNumber: '';\n  // checkIAffirm: '';\n  // aborigine: '';\n\n  private _snackBar = inject(MatSnackBar);\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  selectedFile: File | null = null;\n  previewUrl: string | ArrayBuffer | null = null;\n  formdata!: FormData;\n  imageInBase64!: string; \n  isLoading = true;  // Track the loading state\n  isLoadingOnSubmit = false;\n\n  familyMember: Member = {\n    familyHead: false,\n    firstName: '',\n    lastName:  '',\n    fatherName: '',\n    gender: '',\n    dateOfBirth: '',\n    maritalStatus: '',\n    bloodGroup: '',\n    education: '',\n    permanentAddress: '',\n    mobile: '',\n    altMobile: '',\n    whatsappMobile: '',\n    email: '',\n    area: '',\n    checkedSameAddress: false,\n    checkedSameWhatsappNumber: false,\n    currentAddress: '',\n    profession: '',\n    professionAddress: '',\n    professionEmail: '',\n    professionNumber: '',\n    checkIAffirm: false,\n    aborigine: '',\n    status: 'Pending',\n    role: '',\n    ratriBhojanTyag: '',\n    dhowanPani: ''\n  };\n\n  submitted!: Boolean;\n  familyId: any = 0;\n  memeberId: any;\n  pageMode: string = '';\n  alreadyExistingFamilyHead!: Boolean;\n  alreadyExistingPhoneNumberForAnotherFamily!: Boolean;\n  currentFamily!: FamilyMember;\n  allFamilyMembers: any;\n  MAX_FILE_SIZE = 1 * 1024 * 1024; // 2 MB in bytes\n  loggedInRole = '';\n  loggedInMemberId = 0;\n  familyMemberForAccessCheck?: FamilyMember;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private change: ChangeDetectorRef,\n    private familyMemberService: FamilyMemberService\n  ) {}\n\n  ngOnInit(): void{\n    this.isLoading = true;  // Show progress bar\n    this.memeberId = this.activatedRoute.snapshot.paramMap.get('id')!;\n    this.pageMode = this.activatedRoute.snapshot.paramMap.get('pageMode')!;\n    this.loggedInRole = this.familyMemberService.getLoggedInRole();\n    this.loggedInMemberId = this.familyMemberService.getLoggedInMemberId();\n    this.alreadyExistingFamilyHead = false;\n    this.alreadyExistingPhoneNumberForAnotherFamily = false;\n    this.familyMemberService.getFamilyByMemberId(this.memeberId).subscribe({\n      next: (data) => {\n        this.currentFamily = data;\n        this.familyId = data.familyId;\n        //console.log(this.currentFamily);\n        this.alreadyExistingFamilyHead = this.checkForAlreadyExistingFamilyHead(data);\n        this.isLoading = false;\n      },\n      error: (e) => {\n        console.error(e);\n        this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n    if(this.pageMode === 'edit'){\n      this.isLoading = true;  // Show progress bar\n      this.familyMemberService.getMemberById(this.memeberId).subscribe({\n        next: (data) => {\n          this.familyMember = data;\n          if(this.familyMember.checkedSameWhatsappNumber === null) {\n            this.familyMember.checkedSameWhatsappNumber = false;\n          }\n          this.isLoading = false;\n          // if(this.familyMember.photo !== null) {\n          //   this.selectedFile = this.familyMember.photo;\n          // }\n          //console.log(data);\n        },\n        error: (e) => {\n          console.error(e);\n          this.isLoading = false;  // Hide progress bar on error\n        }\n      });\n    }\n\n    this.familyMemberService.getAllFamiliesForDefaultSearch().subscribe({\n      next: (data) => {\n        this.allFamilyMembers = data;\n        this.isLoading = false;\n      },\n      error: (e) => {\n        console.error(e);\n        this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n\n  }\n\n  onSaveOrUpdate(): void {\n    if (this.isLoadingOnSubmit) return; // Prevent duplicate submissions\n  \n    if (\n      this.familyMember.checkedSameAddress ||\n      (!this.familyMember.checkedSameAddress && this.familyMember.currentAddress)\n    ) {\n      if (\n        this.familyMember.checkedSameWhatsappNumber ||\n        (!this.familyMember.checkedSameWhatsappNumber && this.familyMember.whatsappMobile)\n      ) {\n        if (\n          this.familyMember.firstName &&\n          this.familyMember.lastName &&\n          this.familyMember.fatherName &&\n          this.familyMember.gender &&\n          this.familyMember.dhowanPani &&\n          this.familyMember.ratriBhojanTyag &&\n          !this.checkMobileNumberErrors(this.familyMember.mobile)\n        ) {\n          this.isLoadingOnSubmit = true; // Start the spinner\n    \n          if (this.imageInBase64) {\n            this.familyMember.photo = this.imageInBase64;\n          }\n    \n          // Update mode logic\n          if (this.pageMode === 'edit' && this.familyMember.photo) {\n            this.familyMemberService.update(this.familyMember, this.familyId).subscribe({\n              next: (res) => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop the spinner after delay\n                  this.submitted = true;\n                  this.openSnackBarWithDuration('Success: Member updated successfully.', 'Close');\n                  this.backToSearchPage(res.memberId);\n                }, 1000); // Simulate 1 second delay\n              },\n              error: (e) => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop spinner after error delay\n                  console.error(e);\n                  this.openSnackBar('Error: Failed to update member.', 'Close');\n                }, 1000); // Simulate 1 second delay\n              },\n            });\n          } else if (this.pageMode === 'edit' && !this.familyMember.photo) {\n            this.isLoadingOnSubmit = false; // Stop the spinner\n            this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n          }\n    \n          // Create mode logic\n          if (this.pageMode === 'create' && this.selectedFile) {\n            this.familyMember.role = 'selfedit';\n            this.familyMemberService.create(this.familyMember, this.familyId).subscribe({\n              next: (res) => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop the spinner after delay\n                  this.submitted = true;\n                  this.openSnackBarWithDuration('Success: Member added successfully.', 'Close');\n                  this.backToSearchPage(res.memberId);\n                }, 1000); // Simulate 1 second delay\n              },\n              error: (e) => {\n                setTimeout(() => {\n                  this.isLoadingOnSubmit = false; // Stop spinner after error delay\n                  console.error(e);\n                  this.openSnackBar('Error: Failed to add member.', 'Close');\n                }, 1000); // Simulate 1 second delay\n              },\n            });\n          } else if (this.pageMode === 'create' && !this.selectedFile) {\n            this.isLoadingOnSubmit = false; // Stop the spinner\n            this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n          }\n        } else {\n          this.openSnackBar('Error: Mobile number entered belongs to already existing family.', 'Close');\n        }\n      } else {\n        this.openSnackBar(\n          'Error: WhatsApp number is required if not same as Primary mobile number.',\n          'Close'\n        );\n      }\n    } else {\n      this.openSnackBar(\n        'Error: Current address is required if not same as Permanent address.',\n        'Close'\n      );\n    }\n  }\n\n  // onSaveOrUpdate(): void {\n  //   if(this.familyMember.checkedSameAddress || (!this.familyMember.checkedSameAddress && this.familyMember.currentAddress)){\n  //     if(this.familyMember.checkedSameWhatsappNumber || (!this.familyMember.checkedSameWhatsappNumber && this.familyMember.whatsappMobile)){\n  //       if (this.familyMember.firstName && this.familyMember.lastName && this.familyMember.fatherName && this.familyMember.gender \n  //          && this.familyMember.dhowanPani && this.familyMember.ratriBhojanTyag && !this.checkMobileNumberErrors(this.familyMember.mobile)) {\n  //         // if(this.selectedFile){\n  //         //   this.onUpload();\n  //         // }else if(this.familyMember.photo){\n  //         //   this.setFormData();\n  //         // }\n  //         if(this.imageInBase64){\n  //           this.familyMember.photo = this.imageInBase64;\n  //         }\n  //         if(this.pageMode === 'edit' && this.familyMember.photo){\n  //           this.familyMemberService.update(this.familyMember, this.familyId).subscribe({\n  //             next: (res) => {\n  //               console.log(res);\n  //               this.submitted = true;\n  //               this.openSnackBarWithDuration('Success: Member updated successfully.', 'Close');\n  //               console.log('Member is updated');\n  //               this.backToSearchPage(res.memberId);\n  //             },\n  //             error: (e) => console.error(e)\n  //           });\n  //         }else if(this.pageMode === 'edit' && !this.familyMember.photo) {\n  //           this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n  //           console.error('Form is invalid');\n  //         } \n  //         if(this.pageMode === 'create' && this.selectedFile){\n  //           this.familyMember.role = 'selfedit';\n  //           this.familyMemberService.create(this.familyMember, this.familyId).subscribe({\n  //             next: (res) => {\n  //               console.log(res);\n  //               this.submitted = true;\n  //               this.openSnackBarWithDuration('Success: Member added successfully.', 'Close');\n  //               console.log('Member is updated');\n  //               this.backToSearchPage(res.memberId);\n  //             },\n  //             error: (e) => console.error(e)\n  //           });\n  //         }else if(this.pageMode === 'create' && !this.selectedFile) {\n  //           this.openSnackBar('Error: Please upload photo of size less than 1 MB.', 'Close');\n  //           console.error('Form is invalid');\n  //         }\n  //         console.log('Family Member Data', this.familyMember);\n  //       } else {  \n  //         this.openSnackBar('Error: Mobile number entered belongs to already existing family.', 'Close');\n  //         console.error('Form is invalid');\n  //       }\n  //     }else {\n  //       this.openSnackBar('Error: WhatsApp number is required if not same as Primary mobile number.', 'Close');\n  //           console.error('Form is invalid');\n  //     }\n  //   }else {\n  //       this.openSnackBar('Error: Current address is required if not same as Permanent address.', 'Close');\n  //           console.error('Form is invalid');\n  //     }\n  // }\n  \n\n  backToSearchPage(memberId: any){\n    if(memberId !== undefined && memberId !== null && memberId !== '' && memberId !== 0 && memberId !== \"0\"){\n      this.router.navigate(['/dashboard', {id: memberId, afterSaveOrUpdate: true}]);\n    }else {\n      this.router.navigate(['/dashboard', {afterSaveOrUpdate: false}]);\n    }\n  }\n\n  // onUpdate(): void {\n  //   if (this.familyMember.firstName && this.familyMember.lastName && this.familyMember.fatherName && this.familyMember.gender && !this.checkMobileNumberErrors(this.familyMember.mobile)) {\n  //     this.familyMemberService.update(this.familyMember, this.familyId).subscribe({\n  //       next: (res) => {\n  //         console.log(res);\n  //         this.submitted = true;\n  //       },\n  //       error: (e) => console.error(e)\n  //     });\n  //   } else {\n  //     this.openSnackBar('Error: Mobile number entered belongs to already existing family.', 'Close');\n  //     console.error('Form is invalid');\n  //   }\n  // }\n\n  // onFileSelected(event: any): void {\n  //   const fileInput = event.target as HTMLInputElement;\n  //   var base64String = null;\n  //   if (fileInput.files && fileInput.files[0]) {\n  //     this.selectedFile = fileInput.files[0];\n\n\n  //     // Preview the selected image\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       this.previewUrl = reader.result;\n  //       base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n  //     };\n  //     reader.readAsDataURL(this.selectedFile);\n  //     if(base64String !== null){\n  //       this.familyMember.photo = base64String;\n  //     }\n  //   }\n  // }\n  // onFileSelected(event: any): void {\n  //   const fileInput = event.target as HTMLInputElement;\n    \n  //   if (fileInput.files && fileInput.files[0]) {\n  //     this.selectedFile = fileInput.files[0];\n  \n      \n  //       // Preview the selected image\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       const result = reader.result as string; // Typecast result to string\n  //       this.previewUrl = result;\n        \n  //       // Extract the Base64 portion of the Data URL\n  //       const base64String = result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n  //       this.imageInBase64= base64String;\n  //       // // Convert Base64 string to Blob\n  //       // const byteString = atob(base64String);\n  //       // const byteNumbers = new Array(byteString.length);\n  //       // for (let i = 0; i < byteString.length; i++) {\n  //       //   byteNumbers[i] = byteString.charCodeAt(i);\n  //       // }\n  //       // const byteArray = new Uint8Array(byteNumbers);\n  //       // if(this.selectedFile !== null){\n  //       //   const blob = new Blob([byteArray], { type: this.selectedFile.type });\n  //       //   this.familyMember.photo = blob;\n  //       // }  \n  //     };\n  //     reader.readAsDataURL(this.selectedFile);\n      \n  //   }\n  // }\n\n  onFileSelected(event: any): void {\n    const fileInput = event.target as HTMLInputElement;\n    \n    if (fileInput.files && fileInput.files[0]) {\n      this.selectedFile = fileInput.files[0];\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const result = reader.result as string;\n  \n        // Set the image preview URL\n        this.previewUrl = result;\n  \n        // Extract the Base64 string and store it in the familyMember.photo\n        const base64String = result.split(',')[1];\n        this.familyMember.photo = base64String;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n\n  // onUpload(): Boolean {\n  //   if (this.selectedFile) {\n  //     if (this.selectedFile.size > this.MAX_FILE_SIZE) {\n  //       //alert('File is too large!');\n  //       return false;\n  //     }\n  //     const fileInput = document.getElementById('fileInput');\n\n  //     //fileInput.addEventListener('change', function() {\n  //         const file = this.selectedFile;\n  //         const reader = new FileReader();\n          \n  //         if(reader !== null && reader.result !== null){\n  //           reader.onloadend = function() {\n  //             const base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n  //             const payload = {\n  //                 fileContent: base64String\n  //             };\n\n  //             this.f\n\n  //             // fetch('/upload', {\n  //             //     method: 'POST',\n  //             //     headers: {\n  //             //         'Content-Type': 'application/json'\n  //             //     },\n  //             //     body: JSON.stringify(payload)\n  //             // })\n  //             // .then(response => response.json())\n  //             // .then(data => console.log(data));\n  //         };\n\n  //         reader.readAsDataURL(file);\n  //         }\n          \n  //    // });\n  //     // this.formdata = new FormData();\n  //     // this.formdata.append('file', this.selectedFile);\n  //     // this.formdata.append(\n  //     //   'familyMember',\n  //     //   new Blob([JSON.stringify(this.familyMember)], { type: 'application/json' })\n  //     // );\n  //     return true\n  //   }\n  //   return false;\n  // }\n\n  setFormData() {\n    this.formdata = new FormData();\n    this.formdata.append(\n      'familyMember',\n      new Blob([JSON.stringify(this.familyMember)], { type: 'application/json' })\n    );\n  }\n  \n  goBack(id: string): void {\n    this.router.navigate(['/family', id]);\n  }\n\n  checkForAlreadyExistingFamilyHead(data: any): Boolean{\n    const familyMembers = data.members;\n    for(var i=0; i < familyMembers.length; i++){\n      if(familyMembers[i].familyHead){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkMobileNumberErrors(mobile: any){\n    //const inputMobileNumber = event.target.value;\n    this.alreadyExistingPhoneNumberForAnotherFamily = this.checkForAlreadyExistingPhoneNumberForAnotherFamily(mobile);\n    //this.change.detectChanges();\n    return this.alreadyExistingPhoneNumberForAnotherFamily;\n  }\n\n  checkForAlreadyExistingPhoneNumberForAnotherFamily(inputMobileNumber: any): Boolean {\n    const allmembers = this.allFamilyMembers;\n    var currentFamilyMembers: any[];\n    if(this.currentFamily !== null && this.currentFamily !== undefined && this.currentFamily.members !== undefined && this.currentFamily.members?.length> 0){\n      currentFamilyMembers = this.currentFamily.members;\n    }else {\n      currentFamilyMembers = [];\n    }\n\n    if(allmembers !== null && allmembers !== undefined && allmembers.length > 0){\n      var i = allmembers.length\n      while (i--) {\n        if(currentFamilyMembers !== undefined){\n          for(let j=0; j<currentFamilyMembers.length; j++)\n            {\n              if (allmembers[i].memberId === currentFamilyMembers[j].memberId) { \n                  allmembers.splice(i, 1);\n              }\n            }\n        }\n      }\n\n      for(let k=0; k<allmembers.length; k++){\n          if (allmembers[k].mobile === inputMobileNumber) { \n              return true;\n          }\n      }\n    }\n\n    return false;\n    // var allowedPhNumbers: any;\n\n    // if(currentFamilyMembers !== undefined && currentFamilyMembers.length > 0){\n    //   for(let i=0; i<currentFamilyMembers.length; i++)\n    //   { \n    //     allowedPhNumbers[i] = currentFamilyMembers[i].mobile;\n    //   }\n    //   for(var i=0; i < allmembers.length; i++){\n    //     for(let j=0; j<currentFamilyMembers.length; j++){\n    //       if(allmembers[i].memberId !== currentFamilyMembers[j].memberId && allowedPhNumbers.includes(allmembers[i].mobile)){\n    //         return true;\n    //       }\n    //     }\n    //   }\n    // }\n    // return false;\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n  }\n\n  openSnackBarWithDuration(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 8 * 1000\n    });\n  }\n\n  onSameAddressCheck(event: any){\n    if(event.target.checked || (this.pageMode === 'edit' && this.familyMember.checkedSameAddress)){\n      this.familyMember.currentAddress = this.familyMember.permanentAddress;\n    }else {\n      //this.familyMember.currentAddress = '';\n    }\n    console.log(event.target.value);\n  }\n\n  onSameWhatsAppNumberCheck(event: any){\n    if(event.target.checked || (this.pageMode === 'edit' && this.familyMember.checkedSameWhatsappNumber)){\n      this.familyMember.whatsappMobile = this.familyMember.mobile;\n    }else {\n      //this.familyMember.whatsappMobile = '';\n    }\n    console.log(event.target.value);\n  }\n\n  // isSelfEdit(memberId: any): any {\n  //   if(this.loggedInRole === 'selfedit' && memberId === this.loggedInMemberId){\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  isSelfEdit(memberId: any): any {\n    this.loadFamilyData(memberId);\n    if(this.familyMemberForAccessCheck != undefined && this.familyMemberForAccessCheck.members != undefined){\n      for(let i=0; i < this.familyMemberForAccessCheck?.members.length; i++){\n        if(this.loggedInRole === 'selfedit' && this.loggedInMemberId === this.familyMemberForAccessCheck.members[i].memberId){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  loadFamilyData(id: string): void {\n    //this.isLoading = true;  // Show progress bar\n    this.familyMemberService.getFamilyByMemberId(id).subscribe({\n      next: (data) => {\n        this.familyMemberForAccessCheck = data;\n        //this.isLoading = false;\n        //console.log(data);\n      },\n      error: (e) => {\n        console.error(e);\n        //this.isLoading = false;  // Hide progress bar on error\n      }\n    });\n  }\n\n  checkRoles(): any {\n    if(this.pageMode === 'edit'){\n      if((this.loggedInRole === 'admin' ||  this.loggedInRole === 'edit') || this.isSelfEdit(this.familyMember.memberId)){\n        return true;\n      }\n    }\n\n    if(this.pageMode === 'create'){\n      if(this.loggedInRole === 'admin' ||  this.loggedInRole === 'edit'){\n        return true;\n      }\n    }\n    return false;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}